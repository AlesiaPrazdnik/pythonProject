#преобразование данных в список
"""s = "kellr  hhhh"
lst = list(s) #вариант 1 без пробела, каждый элемент через запятую выведет
lst2 = s.split() ##вариант 2 с пробелом, каждое слово выведет
print(lst)
print(lst2)
#создание списка с клавиатуры
n = int(input("введите количество элементов списка:"))
lst = []#пустой список
for i in range(n):
    x = int(input('введите элемент списка'))
    lst.append(x)
print(lst)"""



#Найти 20 и заменить на 200
"""lst = [1,2,5,1,20,3]
if 20 in lst: #проверяем что 20 есть в списке
    ind = lst.index(20) #выводим индекс  двадцатки (первое вхождение)
    lst[ind] = 200 # меняем найденный индекс (элемент списка) на 200
print(lst)
print(*lst) #вывод списка без квадратных скобок и без запятых"""

#Есть 7 цифр.  найти сумму чётных.Если чётных больше -вывести сумму чётных

"""lst = [1,2,2,5,20,1,3]
count1 = 0
count2 = 0
s = 0
for i in range(len(lst)):
    if lst[i]%2 == 0:
        count2 += 1
        s +=i
    else:
        count1 += 1
if count2>count1:
    print("summa = ",s)
else:
    print("нечётных больше")"""

#Найти совпадающие элементы в 2х списках
#Вывести новый список
"""a = [5,[1,2],2,'r',4,"ee"]
b = [4,'we', 'ee', 3,[1,2]]
c = [] #создаём заранее пустой список
for el in a: #перебираю все элементы в списке а
    if el in b:#если элемент есть в списке b
        if el not in c:# включаем ещё одну дополнительную проверку, чтобы не задвоить элемент
           c.append(el)#то мы добавляем этот элемент в список 
print(c)"""

#Даны 2 списка. Сложить 2 списка. Добавить элемент 6 на 3ю позицию.
#Удалить все текстовые переменные
#Посчитать кол-во эл-ов списка
"""a = [5,[1,2],2,'r',4,"ee"]
b = [4,'we', 'ee', 3,[1,2]]
c = a+b #сделали новый список
print(c)
c.insert(3,6) #добавляем 6 на 3ю позицю
print(len(c))#считает все элементы списка
##print(isinstance(2,int))  #проверяет число ли это, если да, то выводит True
#print(isinstance([2],list)) #то же самое для списков
i = 0 #переменная для работы цикла вайл
while i < len(c):
    print(c[i]) #выводим все элементы в столбик
    if isinstance(c[i],str):
        del c[i] #когда мы удаляем элемент, то наша строка уменьшается, а нам надо чтоб она оставалась той же длины, 
    else:
        i += 1# поэтому если удаляем элемет, мы его заменяем
    
print(*c)"""

ghghgh
